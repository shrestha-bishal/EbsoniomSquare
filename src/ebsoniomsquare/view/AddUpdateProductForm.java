/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ebsoniomsquare.view;

import ebsoniomsquare.MessageParamClass;
import ebsoniomsquare.model.CategoryModel;
import ebsoniomsquare.model.ProductModel;
import ebsoniomsquare.services.CategoryServices;
import ebsoniomsquare.services.ProductServices;
import ebsoniomsquare.servicesImpl.CategoryServicesImpl;
import ebsoniomsquare.servicesImpl.ProductServicesImpl;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Bishal Shrestha
 */
//Form for Add, Update, Delete and Cancel for Product 
public class AddUpdateProductForm extends javax.swing.JFrame {

    /**
     * Creates new form UpdateProductMain
     */
    public AddUpdateProductForm() {
        initComponents();
        addDataInCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        productID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        categoryID = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productDescription = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Product ID: ");

        productID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Product Name: ");

        jLabel6.setText("Category ID:");

        jLabel3.setText("Quantity:");

        jLabel4.setText("Price ($):");

        jLabel5.setText("Product Description: ");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        productDescription.setColumns(20);
        productDescription.setRows(5);
        jScrollPane1.setViewportView(productDescription);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(8, 8, 8))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(productID)
                                    .addComponent(categoryID, 0, 201, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(productName)))
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(categoryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIDActionPerformed

    //Task Performed when Add Button is Clicked
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //Objects to Show Add Product View Message
        MessageParamClass message = new MessageParamClass("Sure to Add Product?", "EbsoniomSquare Message?");
        int returnOptionValue = message.showConfirmDialog(); 
        if(returnOptionValue==0){  //value of yes = 0
        ProductModel product=new ProductModel();
        String pid = productID.getText();
        String prodName = productName.getText();
        String quan = quantity.getText();
        String priceT = price.getText();
        String prodDesc = productDescription.getText();
        String cid = (String) categoryID.getSelectedItem();
        if(!(pid.isEmpty() && prodName.isEmpty() && quan.isEmpty() && priceT.isEmpty() && prodDesc.isEmpty())) {
            //if not null then invoke the services
        product.setPid(pid);
        product.setQuantity(quan);
        product.setPrice(priceT);
        product.setProductDescription(prodDesc);
        product.setProductName(prodName);
        product.setCategoryid(cid);
        ProductServices productServices = new ProductServicesImpl(); //creating and invoking the interface
        if(productServices.addProduct(product)){
         JOptionPane.showMessageDialog(null, "Addition Success!!");
         productID.setText("");
         productName.setText("");
         quantity.setText("");
         price.setText("");
         productDescription.setText("");
        }else{
           JOptionPane.showMessageDialog(null, "Addition Failed!!");
        }
       }else{
            JOptionPane.showMessageDialog(null, "Please check for empty fields");
        }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    //Task Performed when Delete Button is Clicked
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        //Objects to Show Delete Product View Message
        MessageParamClass message = new MessageParamClass("Sure to Delete Product Details?", "EbsoniomSquare Message");
        int returnOptionValue = message.showConfirmDialog(); 
        if(returnOptionValue==0){  //value of yes = 0
        ProductModel product=new ProductModel();
        String pid = productID.getText();
        String prodName = productName.getText();
        String quan = quantity.getText();
        String priceT = price.getText();
        String prodDesc = productDescription.getText();
        String cid = (String) categoryID.getSelectedItem();
        if(!(pid.isEmpty() && prodName.isEmpty() && quan.isEmpty() && priceT.isEmpty() && prodDesc.isEmpty())) {
        product.setPid(pid);
        product.setQuantity(quan);
        product.setPrice(priceT);
        product.setProductDescription(prodDesc);
        product.setProductName(prodName);
        product.setCategoryid(cid);
        ProductServices productServices = new ProductServicesImpl(); //creating and invoking interface 
       if( productServices.deleteProduct(product)){
         JOptionPane.showMessageDialog(null, "Delete Success!!");
            setVisible(false);
            ProductInventoryMain frame = new ProductInventoryMain();
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(ManagementMain.DISPOSE_ON_CLOSE);
            frame.setVisible(true);
            setVisible(false);
       }else{
           JOptionPane.showMessageDialog(null, "Delete Failed!!");
       }
        }else{
            JOptionPane.showMessageDialog(null, "Please check for empty fields");
        }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    //Task Performed when Update Button is Clicked 
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //Objects to Show Update Product View Message
        MessageParamClass message = new MessageParamClass("Sure to Update Product Details?", "EbsoniomSquare Message");
        int returnOptionValue = message.showConfirmDialog(); 
        if(returnOptionValue==0){  //value of yes = 0
        ProductModel product=new ProductModel();
        String pid = productID.getText();
        String prodName = productName.getText();
        String quan = quantity.getText();
        String priceT = price.getText();
        String prodDesc = productDescription.getText();
        String cid = (String) categoryID.getSelectedItem();
        if(!(pid.isEmpty() && prodName.isEmpty() && quan.isEmpty() && priceT.isEmpty() && prodDesc.isEmpty())) {
        product.setPid(pid);
        product.setQuantity(quan);
        product.setPrice(priceT);
        product.setProductDescription(prodDesc);
        product.setProductName(prodName);
        product.setCategoryid(cid);
        ProductServices productServices = new ProductServicesImpl(); //invoking interface
     if( productServices.updateProduct(product)){
         JOptionPane.showMessageDialog(null, "Update Success!!");
            setVisible(false);
            ProductInventoryMain frame = new ProductInventoryMain();
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(ManagementMain.DISPOSE_ON_CLOSE);
            frame.setVisible(true);
            setVisible(false);
       }else{
           JOptionPane.showMessageDialog(null, "Update Failed!!");
       } 
    }
        else{
            JOptionPane.showMessageDialog(null, "Please check for empty fields");
        }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    //Task Performed when Cancel Button is Clicked
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //Objects to Show Cancel Product View Message
        MessageParamClass message = new MessageParamClass("Sure to Cancel?", "EbsoniomSquare Message");
        int returnOptionValue = message.showConfirmDialog(); 
        if(returnOptionValue==0){  //value of yes = 0
            setVisible(false);
            ProductInventoryMain frame = new ProductInventoryMain();
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(ManagementMain.DISPOSE_ON_CLOSE);
            frame.setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    /*Getting id of product */
    public void setData(String pid){
        ProductServices productServices=new ProductServicesImpl();
        ProductModel product = productServices.getById(pid);
        price.setText(product.getPrice());
        productID.setText(pid);
        productID.setEnabled(false);
        productID.setEditable(false);
        productName.setText(product.getProductName());
        quantity.setText(product.getQuantity());
        productDescription.setText(product.getProductDescription());
        categoryID.setSelectedItem(product.getCategoryid());
        categoryID.setEnabled(false);
        categoryID.setEditable(false);
        
    }
    
    /*Adding data in combo*/
    public void addDataInCombo(){
        System.out.println("Adding in combo");
        DefaultComboBoxModel model= (DefaultComboBoxModel) categoryID.getModel();
        CategoryServices categoryServices=new CategoryServicesImpl();
        List<CategoryModel> list1=new ArrayList<>();
        list1=categoryServices.getCategoryName();
          for (CategoryModel cm: list1) {
            model.addElement(cm.getCid());
          }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpdateProductForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpdateProductForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> categoryID;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField price;
    private javax.swing.JTextArea productDescription;
    private javax.swing.JTextField productID;
    private javax.swing.JTextField productName;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
